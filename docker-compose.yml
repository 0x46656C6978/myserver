# This file is auto-generated and overwritten each time you start-up containers.
# If you want to update this file, add your custom config to "$SERVER_ROOT/server/docker-compose.yml" instead.
# You can add your custom variables via config.ini and use them in here.
# ----------
# If you're using Windows or MacOS, you can switch network_mode to bridge instead
version: "3.1"

services:

  # mysql56:
  #   container_name: ${PREFIX}_mysql_56
  #   image: mysql:5.6.23
  #   restart: always
  #   ports:
  #     - 33061:3306
  #   command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
  #   environment:
  #     MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #     MYSQL_DATABASE: ${MYSQL_DATABASE}
  #   user: ${MYSQL_ROOT_USERNAME}
  #   volumes:
  #     - ./data/mysql/5.6:/var/lib/mysql
  #     # - ./etc/mysql/conf.d/mysql.cnf:/etc/mysql/conf.d/config-file.cnf
  #     - ${WEB_ROOT}:/var/www/html
  #   network_mode: bridge


  mysql57:
    container_name: ${PREFIX}_mysql_57
    image: mysql:5.7.33
    restart: always
    ports:
      - 33062:3306
    command: mysqld --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    user: ${MYSQL_ROOT_USERNAME}
    volumes:
      - ./data/mysql/5.7:/var/lib/mysql
      # - ./etc/mysql/conf.d/mysql.cnf:/etc/mysql/conf.d/config-file.cnf
      - ${WEB_ROOT}:/var/www/html
    network_mode: bridge


  php73:
    container_name: ${PREFIX}_php73
    build: ./dockerfiles/php7.3
    restart: always
    ports:
      - 9090:9000
    volumes:
      - ${WEB_ROOT}:/var/www/html:cached
      # Mount PHP configs
      - ./etc/php7/fpm-pool.conf:/etc/php7/php-fpm.d/www.conf
      - ./etc/php7/php.ini:/etc/php7/conf.d/z.custom.ini
    network_mode: bridge


  php56:
    container_name: ${PREFIX}_php56
    build: ./dockerfiles/php5.6
    restart: always
    ports:
      - 9091:9000
    volumes:
      - ${WEB_ROOT}:/var/www/html:cached
    network_mode: bridge


  nginx:
    container_name: ${PREFIX}_nginx
    image: nginx:1.18.0-alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${WEB_ROOT}:/var/www/html:cached
      # Mount Nginx config
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
      - ./etc/ssl:/etc/nginx/ssl
    links:
      - php73
      - php56
    depends_on:
      - php73
      - php56
    network_mode: bridge


  redis:
    container_name: ${PREFIX}_redis
    image: redis:5.0.7-alpine
    restart: always
    ports:
      - 6379:6379
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    volumes:
      - ./data/redis:/data
    entrypoint: redis-server --appendonly yes
    network_mode: bridge


  # minio:
  #   container_name: ${PREFIX}_minio
  #   image: minio/minio
  #   volumes:
  #     - ./data/minio/:/data
  #   ports:
  #     - 9003:9000
  #   environment:
  #     MINIO_ACCESS_KEY: "app"
  #     MINIO_SECRET_KEY: "secretsecret"
  #     MINIO_REGION: "us-west-2"
  #   command: server /data
  #   network_mode: bridge


  postgres13:
    container_name: ${PREFIX}_postgres13
    image: postgres:13-alpine
    volumes:
      - ./data/postgres/13:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
